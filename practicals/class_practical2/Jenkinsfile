pipeline {
    agent any
    
    triggers {
        pollSCM('H/5 * * * *') // Poll every 5 minutes
    }
    
    stages {
        stage('Check Commit Message') {
            steps {
                script {
                    // Get the last commit message
                    def commitMessage = sh(returnStdout: true, script: 'git log -1 --pretty=%B').trim()
                    
                    // Check if message contains @build
                    if (!commitMessage.contains('@build')) {
                        currentBuild.result = 'ABORTED'
                        error('Commit message does not contain @build trigger. Build aborted.')
                    }
                }
            }
        }
        
        stage('Build') {
            steps {
                echo 'Building application...'
                // Add your build commands here
                // Example for a Node.js app:
                // sh 'npm install'
                // sh 'npm run build'
            }
        }
        
        stage('Test') {
            steps {
                echo 'Running tests...'
                // Add your test commands here
                // Example: sh 'npm test'
            }
        }
        
        stage('Deploy') {
            steps {
                echo 'Deploying application...'
                // Add your deployment commands here
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline completed. Cleaning up...'
        }
        success {
            echo 'Build, test, and deploy succeeded!'
        }
        failure {
            echo 'Pipeline failed. Check logs for details.'
        }
        aborted {
            echo 'Pipeline was aborted due to missing trigger.'
        }
    }
}